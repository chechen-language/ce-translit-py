name: Upload Python Package

on:
  release:
    types: [published, prereleased]
  workflow_dispatch:
    inputs:
      publish_to_testpypi:
        description: 'Publish to TestPyPI'
        required: false
        type: boolean
        default: false

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: Install Hatch
        run: |
          pip install --upgrade hatch pytest
      
      - name: Run tests
        run: |
          hatch run test

  release-build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-python@v5
        with:
          python-version: "3.x"
      
      - name: Install build dependencies
        run: |
          pip install --upgrade hatch pytest twine
      
      - name: Build release distributions
        run: |
          hatch build
      
      - name: Check distribution
        run: |
          twine check dist/*
      
      - name: Upload distributions
        uses: actions/upload-artifact@v4
        with:
          name: release-dists
          path: dist/

  testpypi-publish:
    if: |
      github.event_name == 'workflow_dispatch' && github.event.inputs.publish_to_testpypi == 'true' ||
      github.event_name == 'release' && github.event.release.prerelease == true
    runs-on: ubuntu-latest
    needs:
      - release-build
    permissions:
      id-token: write
    environment:
      name: testpypi
    steps:
      - name: Retrieve release distributions
        uses: actions/download-artifact@v4
        with:
          name: release-dists
          path: dist/
      
      - name: Publish release distributions to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          packages-dir: dist/
          # skip-existing: true  # Skip if version already exists
          verbose: true

  pypi-publish:
    if: github.event_name == 'release' && github.event.release.prerelease == false
    runs-on: ubuntu-latest
    needs:
      - release-build
    permissions:
      id-token: write

    environment:
      name: pypi

    steps:
      - name: Retrieve release distributions
        uses: actions/download-artifact@v4
        with:
          name: release-dists
          path: dist/
      
      - name: Publish release distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist/
          verbose: true